enum Baz {
  BAZ_ONE
  BAZ_TWO
  BAZ_THREE
}

scalar Date

input FooInput {
  id: ID!
  stuff: String
  lst: [String]!
  dt: Date
  enm: Baz
}

type Bar {
  id: ID!
  blah(num: Int!): Int!
}

type Foo {
  id: ID!
  stuff: String
  bars: [Bar!]
  dt: Date
  enm: Baz
}

type Query {
  bar(id: ID!): Bar!

  foo(id: FooInput): Foo!

  foos(ids: [ID!], blah: String): [Foo!]!
}
